{"version":3,"sources":["js\\entities\\tile.js"],"names":["Tile","chessBoard","contains","_position","_size","push","translate","size","width","position","x","height","y","fill","rect","pop","getTilePosition","w","cols","h","rows"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA;AACF,kBAAYC,UAAZ,EAAwB;AAAA;;AACpB;;;AAGA,aAAKA,UAAL,GAAkBA,UAAlB;AACA,aAAKC,QAAL,GAAgB,IAAhB;;AAEA;;;;AAIA,aAAKC,SAAL,GAAiB,IAAjB;;AAEA;;;;AAIA,aAAKC,KAAL,GAAa,IAAb;AACH;;AAED;;;;;;;+BAyBO;AACHC;AACA;AACAC,sBAAU,KAAKC,IAAL,CAAUC,KAAV,GAAkB,KAAKC,QAAL,CAAcC,CAA1C,EAA6C,KAAKH,IAAL,CAAUI,MAAV,GAAmB,KAAKF,QAAL,CAAcG,CAA9E;;AAEA,gBAAI,KAAKH,QAAL,CAAcC,CAAd,GAAkB,CAAlB,IAAuB,KAAKD,QAAL,CAAcG,CAAd,GAAkB,CAA7C,EAAgD;AAC5CC,qBAAK,GAAL;AACH,aAFD,MAEO;AACHA,qBAAK,CAAL;AACH;AACDC,iBAAK,CAAL,EAAQ,CAAR,EAAW,KAAKP,IAAL,CAAUC,KAArB,EAA4B,KAAKD,IAAL,CAAUI,MAAtC;AACAI;AACH;;;4BAlCc;AACX,gBAAI,KAAKZ,SAAL,IAAkB,IAAtB,EAA4B;AACxB,qBAAKA,SAAL,GAAiB,KAAKF,UAAL,CAAgBe,eAAhB,CAAgC,IAAhC,CAAjB;AACH;AACD,mBAAO,KAAKb,SAAZ;AACH;;AAED;;;;;;4BAGW;AACP,gBAAI,KAAKC,KAAL,IAAc,IAAlB,EAAwB;AACpB,oBAAIa,IAAI,KAAKhB,UAAL,CAAgBM,IAAhB,CAAqBC,KAArB,GAA6B,KAAKP,UAAL,CAAgBiB,IAArD;AACA,oBAAIC,IAAI,KAAKlB,UAAL,CAAgBM,IAAhB,CAAqBI,MAArB,GAA8B,KAAKV,UAAL,CAAgBmB,IAAtD;AACA,qBAAKhB,KAAL,GAAa;AACT,6BAASa,CADA;AAET,8BAAUE;AAFD,iBAAb;AAIH;AACD,mBAAO,KAAKf,KAAZ;AACH","file":"tile.f9bcc816.map","sourceRoot":"..","sourcesContent":["class Tile {\r\n    constructor(chessBoard) {\r\n        /**\r\n         * @type {ChessBoard}\r\n         */\r\n        this.chessBoard = chessBoard;\r\n        this.contains = null;\r\n\r\n        /**\r\n         * @type {{x: Number, y: Number}}\r\n         * @private\r\n         */\r\n        this._position = null;\r\n\r\n        /**\r\n         * @type {{width: Number, height: Number}}\r\n         * @private\r\n         */\r\n        this._size = null;\r\n    }\r\n\r\n    /**\r\n     * @returns {{x: Number, y: Number}}\r\n     */\r\n    get position() {\r\n        if (this._position == null) {\r\n            this._position = this.chessBoard.getTilePosition(this);\r\n        }\r\n        return this._position;\r\n    }\r\n\r\n    /**\r\n     * @returns {{width: Number, height: Number}}\r\n     */\r\n    get size() {\r\n        if (this._size == null) {\r\n            var w = this.chessBoard.size.width / this.chessBoard.cols;\r\n            var h = this.chessBoard.size.height / this.chessBoard.rows;\r\n            this._size = {\r\n                'width': w,\r\n                'height': h\r\n            };\r\n        }\r\n        return this._size;\r\n    }\r\n\r\n    draw() {\r\n        push();\r\n        // go to position on board\r\n        translate(this.size.width * this.position.x, this.size.height * this.position.y);\r\n        \r\n        if (this.position.x % 2 == this.position.y % 2) {\r\n            fill(255);\r\n        } else {\r\n            fill(0);\r\n        }\r\n        rect(0, 0, this.size.width, this.size.height);\r\n        pop();\r\n    }\r\n}"]}