@import "reset";

// color palette
$bg1: #FCFCFC;
$bg2: #EFEFEF;
$fc: #080816;
$lc: #88D317;
$hc: #4F2649;
$wc: #D31717;

// other
$spacing: 1rem;

html {
    height: 100%;
}

html,
body {
    background: $bg2;
    color: $fc;
    min-height: 100%;
    font-family: 'Roboto', 'Courier New', Courier, monospace;
    display: flex;
    flex-direction: column;
}

a {
    color: $lc;
    text-decoration: none;
}

//CSS Grid for positioning
.grid {
    margin: 0;
    display: grid;
    grid-template-columns: 275px 325px 400px;
    grid-template-rows: 5.25rem calc(100% - 5.25rem);
    grid-template-areas:
        'titel titel titel'
        'settings scene calculation';

    .grid__title {
        grid-area: titel;
    }

    .grid__settings {
        grid-area: settings;
    }

    .grid__scene {
        grid-area: scene;
    }

    .grid__calculation {
        grid-area: calculation;
    }
}

// let the scene scale on bigger screens
@media (min-width: 1000px) {
    .grid {
        grid-template-columns: 275px auto 400px;
    }
}

.header {
    background: $hc;
    color: $bg2;
    padding: $spacing;

    h1 {
        font-size: 1.75rem;
        line-height: 2.25rem;
    }

    .tiny {
        font-size: 0.75rem;
        line-height: 1rem;
    }
}

h2 {
    font-size: 1.25rem;
    line-height: 1.5rem;
    margin-bottom: $spacing;
}

.settings {
    padding: $spacing;

    // checkbox hack because they will be replaced with different visual elements
    input[type=checkbox] {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }

    .micro-macro::after,
    label {
        line-height: 1.5rem;
        white-space: nowrap;
        text-align: right;
    }

    .options {
        display: grid;
        grid-template-columns: 5rem 1fr;
        grid-gap: $spacing;
        margin-bottom: $spacing;

        input[type=text] {
            box-sizing: border-box;
            background: $bg1;
            color: $fc;
            line-height: 1.5rem;
            padding: 0 0.5rem;
            border: none;
            width: 100%;
        }
    }

    .micro-macro {
        display: grid;
        grid-template-columns: 1fr auto 1fr;
        grid-gap: $spacing;
        margin-bottom: $spacing;

        // toggle socket
        .micro-toggle {
            background: $bg1;
            display: block;
            height: 1.5rem;
            width: 2.5rem;
            border-radius: 1.5rem;
        }
        
        // toggle leaver
        .micro-toggle::before {
            background: $lc;
            content: '';
            display: block;
            float: right;
            height: 1.5rem;
            width: 1.5rem;
            border-radius: 1.5rem;
            cursor: pointer;
        }

        input[type=checkbox]:checked~.micro-toggle::before {
            float: left;
        }

        input[type=checkbox]:disabled~.micro-toggle::before {
            cursor: default;
        }
    }

    // add macro "label" at the right side of the toggle
    .micro-macro::after {
        content: 'Macro';
        text-align: left;
    }
    
    .controls {
        display: grid;
        grid-template-columns: auto auto auto;
        grid-gap: $spacing;
        margin-bottom: $spacing;

        .button {
            background: $lc;
            color: $bg1;
            display: inline-block;
            height: 2rem;
            line-height: 2rem;
            font-size: 1rem;
            padding: 0 0.5rem;
            font-weight: normal;
            margin: 0;
            border: none;
            white-space: nowrap;
            text-align: center;
            cursor: pointer;
        }
        
        // play / stop button toggle
        .auto-toggle::before {
            content: 'Play';
        }
        input[type=checkbox]:checked~.auto-toggle::before {
            content: 'Stop';
        }
    }

    input[type=text]:disabled,
    input[type=checkbox]:disabled~.micro-toggle,
    input[type=checkbox]:disabled~.auto-toggle,
    .button:disabled {
        opacity: 0.6;
        cursor: default;
    }
}

#scene {
    display: grid;
    justify-content: center;
    align-items: center;
}

.log {
    display: grid;
    grid-template-rows: 2.5rem 1fr;
    padding: $spacing;

    #log-entries {
        background: $bg1;
        overflow-y: auto;

        .entry {
            color: $bg1;
            padding: 0.5rem;
            border-bottom: 1px solid $fc;
            line-height: 1.5rem;
            font-size: 1rem;
            cursor: pointer;
        }
        
        .entry:hover {
            opacity: 0.75;
        }

        // highlight different entries
        .unitCut {
            color: $hc;
        }
        .choose {
            background: $fc;
        }
        .satisfied {
            background: $lc;
        }
        .backtrack {
            background: $hc;
        }
        .notSatisfiable {
            background: $wc;
        }

        // highlight syntax
        .set {
            color: $hc;
        }
        .literal {
            color: $wc;
        }
        .literal.true {
            color: $lc;
        }
    }

    // custom scrollbar for the log
    #log-entries::-webkit-scrollbar {
        width: 8px;
        height: 8px;
    }
    #log-entries::-webkit-scrollbar-thumb {
        background: $hc;
        border-radius: 8px;
    }
}
